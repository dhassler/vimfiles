!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
,F	settings/editing.vim	/^nnoremap <silent> ,F :let word=expand("<cword>")<CR>:vsp<CR>:wincmd w<cr>:exec("tag ". word)<cr>$/;"	m
,gf	settings/editing.vim	/^nnoremap <silent> ,gf :vertical botright wincmd f<CR>$/;"	m
:vs	settings/editing.vim	/^map :vs :vsplit<cr><c-w>l$/;"	m
<A-[>	settings/editing.vim	/^  imap <A-[> <Esc><<i$/;"	m
<A-[>	settings/editing.vim	/^  nmap <A-[> <<$/;"	m
<A-[>	settings/editing.vim	/^  omap <A-[> <<$/;"	m
<A-[>	settings/editing.vim	/^  vmap <A-[> <gv$/;"	m
<A-]>	settings/editing.vim	/^  imap <A-]> <Esc>>>i$/;"	m
<A-]>	settings/editing.vim	/^  nmap <A-]> >>$/;"	m
<A-]>	settings/editing.vim	/^  omap <A-]> >>$/;"	m
<A-]>	settings/editing.vim	/^  vmap <A-]> >gv$/;"	m
<C-0>	settings/editing.vim	/^  imap <C-0> <Esc>0gt$/;"	m
<C-0>	settings/editing.vim	/^  map  <C-0> 0gt$/;"	m
<C-1>	settings/editing.vim	/^  imap <C-1> <Esc>1gt$/;"	m
<C-1>	settings/editing.vim	/^  map  <C-1> 1gt$/;"	m
<C-2>	settings/editing.vim	/^  imap <C-2> <Esc>2gt$/;"	m
<C-2>	settings/editing.vim	/^  map  <C-2> 2gt$/;"	m
<C-3>	settings/editing.vim	/^  imap <C-3> <Esc>3gt$/;"	m
<C-3>	settings/editing.vim	/^  map  <C-3> 3gt$/;"	m
<C-4>	settings/editing.vim	/^  imap <C-4> <Esc>4gt$/;"	m
<C-4>	settings/editing.vim	/^  map  <C-4> 4gt$/;"	m
<C-5>	settings/editing.vim	/^  imap <C-5> <Esc>5gt$/;"	m
<C-5>	settings/editing.vim	/^  map  <C-5> 5gt$/;"	m
<C-6>	settings/editing.vim	/^  imap <C-6> <Esc>6gt$/;"	m
<C-6>	settings/editing.vim	/^  map  <C-6> 6gt$/;"	m
<C-7>	settings/editing.vim	/^  imap <C-7> <Esc>7gt$/;"	m
<C-7>	settings/editing.vim	/^  map  <C-7> 7gt$/;"	m
<C-8>	settings/editing.vim	/^  imap <C-8> <Esc>8gt$/;"	m
<C-8>	settings/editing.vim	/^  map  <C-8> 8gt$/;"	m
<C-9>	settings/editing.vim	/^  imap <C-9> <Esc>9gt$/;"	m
<C-9>	settings/editing.vim	/^  map  <C-9> 9gt$/;"	m
<C-Down>	settings/plugins.vim	/^nmap <C-Down> ]e$/;"	m
<C-Down>	settings/plugins.vim	/^vmap <C-Down> ]egv$/;"	m
<C-Left>	settings/editing.vim	/^map <C-Left> :call TabMove(1)<CR>$/;"	m
<C-Right>	settings/editing.vim	/^map <C-Right> :call TabMove(0)<CR>$/;"	m
<C-Up>	settings/plugins.vim	/^nmap <C-Up> [e$/;"	m
<C-Up>	settings/plugins.vim	/^vmap <C-Up> [egv$/;"	m
<C-_>	settings/editing.vim	/^map <C-_> <C-w>_$/;"	m
<C-_>	settings/plugins.vim	/^  map <C-_> <Esc><leader>c<space>$/;"	m
<C-a>	settings/plugins.vim	/^vnoremap <C-a> "hy:Ack "<C-r>=escape(@h,'.\/"*()[]?')<CR>"<CR>$/;"	m
<C-f>	settings/editing.vim	/^vnoremap <C-f> "hy:\/\\V<C-r>=escape(@h,'\/')<CR>\/<CR>$/;"	m
<C-h>	settings/editing.vim	/^map <C-h> <C-w>h$/;"	m
<C-j>	settings/editing.vim	/^map <C-j> <C-w>j$/;"	m
<C-k>	settings/editing.vim	/^map <C-k> <C-w>k$/;"	m
<C-l>	settings/editing.vim	/^map <C-l> <C-w>l$/;"	m
<C-n>	settings/editing.vim	/^  map <C-n> gT$/;"	m
<C-p>	settings/editing.vim	/^  map <C-p> gt$/;"	m
<C-r>	settings/editing.vim	/^vnoremap <C-r> "hy:%s\/\\V<C-r>=escape(@h,'\/')<CR>\/\/gc<left><left><left>$/;"	m
<CR>	settings/editing.vim	/^  nnoremap <CR> :nohlsearch<CR>$/;"	m
<D-/>	settings/plugins.vim	/^  imap <D-\/> <Esc><plug>NERDCommenterToggle i$/;"	m
<D-/>	settings/plugins.vim	/^  map <D-\/> <plug>NERDCommenterToggle$/;"	m
<D-0>	settings/editing.vim	/^  imap <D-0> <Esc>0gt$/;"	m
<D-0>	settings/editing.vim	/^  map  <D-0> 0gt$/;"	m
<D-1>	settings/editing.vim	/^  imap <D-1> <Esc>1gt$/;"	m
<D-1>	settings/editing.vim	/^  map  <D-1> 1gt$/;"	m
<D-2>	settings/editing.vim	/^  imap <D-2> <Esc>2gt$/;"	m
<D-2>	settings/editing.vim	/^  map  <D-2> 2gt$/;"	m
<D-3>	settings/editing.vim	/^  imap <D-3> <Esc>3gt$/;"	m
<D-3>	settings/editing.vim	/^  map  <D-3> 3gt$/;"	m
<D-4>	settings/editing.vim	/^  imap <D-4> <Esc>4gt$/;"	m
<D-4>	settings/editing.vim	/^  map  <D-4> 4gt$/;"	m
<D-5>	settings/editing.vim	/^  imap <D-5> <Esc>5gt$/;"	m
<D-5>	settings/editing.vim	/^  map  <D-5> 5gt$/;"	m
<D-6>	settings/editing.vim	/^  imap <D-6> <Esc>6gt$/;"	m
<D-6>	settings/editing.vim	/^  map  <D-6> 6gt$/;"	m
<D-7>	settings/editing.vim	/^  imap <D-7> <Esc>7gt$/;"	m
<D-7>	settings/editing.vim	/^  map  <D-7> 7gt$/;"	m
<D-8>	settings/editing.vim	/^  imap <D-8> <Esc>8gt$/;"	m
<D-8>	settings/editing.vim	/^  map  <D-8> 8gt$/;"	m
<D-9>	settings/editing.vim	/^  imap <D-9> <Esc>9gt$/;"	m
<D-9>	settings/editing.vim	/^  map  <D-9> 9gt$/;"	m
<D-CR>	settings/editing.vim	/^  map <D-CR> :set fullscreen!<CR>$/;"	m
<D-R>	settings/plugins.vim	/^  nnoremap <D-R> :NERDTree<CR><C-w>p:NERDTreeFind<CR>$/;"	m
<D-[>	settings/editing.vim	/^  imap <D-[> <Esc><<i$/;"	m
<D-[>	settings/editing.vim	/^  nmap <D-[> <<$/;"	m
<D-[>	settings/editing.vim	/^  omap <D-[> <<$/;"	m
<D-[>	settings/editing.vim	/^  vmap <D-[> <gv$/;"	m
<D-]>	settings/editing.vim	/^  imap <D-]> <Esc>>>i$/;"	m
<D-]>	settings/editing.vim	/^  nmap <D-]> >>$/;"	m
<D-]>	settings/editing.vim	/^  omap <D-]> >>$/;"	m
<D-]>	settings/editing.vim	/^  vmap <D-]> >gv$/;"	m
<D-e>	settings/plugins.vim	/^  map <D-e> :TagbarToggle<CR><C-w>l$/;"	m
<D-j>	settings/editing.vim	/^  map <D-j> gt$/;"	m
<D-k>	settings/editing.vim	/^  map <D-k> gT$/;"	m
<D-l>	settings/editing.vim	/^  inoremap <D-l> <C-O>:nohlsearch<CR>:ccl<CR>$/;"	m
<D-l>	settings/editing.vim	/^  nnoremap <D-l> :nohlsearch<CR>:ccl<CR>$/;"	m
<D-r>	settings/plugins.vim	/^  nnoremap <D-r> :NERDTreeToggle<CR>$/;"	m
<Leader>r	settings/misc.vim	/^map <silent> <Leader>r :call Refresh()<CR>$/;"	m
<Leader>t	settings/plugins.vim	/^map <Leader>t :TagbarToggle<CR>$/;"	m
<Leader>tb	settings/plugins.vim	/^map <silent> <Leader>tb :TagbarOpen<CR>$/;"	m
<leader>a	settings/plugins.vim	/^map <leader>a :Ack<space>$/;"	m
<leader>a	settings/plugins.vim	/^vmap <leader>a "hy:Ack "<C-r>=escape(@h,'.\/"*()[]?')<CR>"<CR>$/;"	m
<leader>qa	settings/editing.vim	/^map <leader>qa :qa<CR>$/;"	m
<leader>ta	settings/plugins.vim	/^map <leader>ta :tabnew<CR>:Ack<space>$/;"	m
<leader>ta	settings/plugins.vim	/^vmap <leader>ta "hy:tabnew<CR>:Ack "<C-r>=escape(@h,'.\/"*()[]?')<CR>"<CR>$/;"	m
<leader>tn	settings/editing.vim	/^map <leader>tn :tabnew<CR>$/;"	m
<leader>va	settings/plugins.vim	/^map <leader>va :vnew<CR>:Ack<space>$/;"	m
<leader>va	settings/plugins.vim	/^vmap <leader>va "hy:vnew<CR>:Ack "<C-r>=escape(@h,'.\/"*()[]?')<CR>"<CR>$/;"	m
<leader>w	settings/plugins.vim	/^  map <leader>w :NERDTreeToggle<CR><space>$/;"	m
<leader>x	settings/editing.vim	/^map <leader>x :x<CR>$/;"	m
CloseIfOnlyNerdTreeLeft	settings/autocommands.vim	/^function s:CloseIfOnlyNerdTreeLeft()$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
LongLines	settings/statusline.vim	/^function! s:LongLines()$/;"	f
Median	settings/statusline.vim	/^function! s:Median(nums)$/;"	f
NERDTreeChDirMode	settings/plugins.vim	/^let NERDTreeChDirMode=2$/;"	v
NERDTreeDirArrows	settings/plugins.vim	/^let NERDTreeDirArrows=1$/;"	v
NERDTreeHijackNetrw	after/plugin/nerdtree_command-t.vim	/^augroup NERDTreeHijackNetrw$/;"	a
NERDTreeIgnore	settings/plugins.vim	/^let NERDTreeIgnore=['\\.pyc$', '\\.rbc$', '\\~$', '^tags$']$/;"	v
NT	settings/plugins.vim	/^command -n=? -complete=dir NT NERDTreeToggle <args>$/;"	c
Refresh	settings/misc.vim	/^function Refresh()$/;"	f
ReplaceNERDTreeIfDirectory	after/plugin/nerdtree_command-t.vim	/^function ReplaceNERDTreeIfDirectory()$/;"	f
StatuslineCurrentHighlight	settings/statusline.vim	/^function! StatuslineCurrentHighlight()$/;"	f
StatuslineLongLineWarning	settings/statusline.vim	/^function! StatuslineLongLineWarning()$/;"	f
StatuslineTabWarning	settings/statusline.vim	/^function! StatuslineTabWarning()$/;"	f
StatuslineTrailingSpaceWarning	settings/statusline.vim	/^function! StatuslineTrailingSpaceWarning()$/;"	f
TabMove	settings/editing.vim	/^function TabMove(n)$/;"	f
Tr	settings/editing.vim	/^command Tr %s\/\\s\\+$\/\/ge | %s\/\\t\/  \/ge | nohlsearch$/;"	c
Ve	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vopen	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
g:NERDRemoveExtraSpaces	settings/plugins.vim	/^let g:NERDRemoveExtraSpaces = 1$/;"	v
g:NERDSpaceDelims	settings/plugins.vim	/^let g:NERDSpaceDelims = 1$/;"	v
g:gist_clip_command	settings/plugins.vim	/^  let g:gist_clip_command = 'pbcopy'$/;"	v
g:gist_clip_command	settings/plugins.vim	/^  let g:gist_clip_command = 'putclip'$/;"	v
g:gist_clip_command	settings/plugins.vim	/^  let g:gist_clip_command = 'xclip -selection clipboard'$/;"	v
g:gist_detect_filetype	settings/plugins.vim	/^let g:gist_detect_filetype = 1$/;"	v
g:gist_show_privates	settings/plugins.vim	/^let g:gist_show_privates = 1$/;"	v
g:html_font	settings/plugins.vim	/^let g:html_font="Menlo"$/;"	v
g:html_number_lines	settings/plugins.vim	/^let g:html_number_lines=0$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:surround_113	settings/plugins.vim	/^let g:surround_113 = "#{\\r}" " v$/;"	v
g:surround_35	settings/plugins.vim	/^let g:surround_35  = "#{\\r}" " #$/;"	v
g:surround_45	settings/plugins.vim	/^let g:surround_45 = "<% \\r %>"  " -$/;"	v
g:surround_61	settings/plugins.vim	/^let g:surround_61 = "<%= \\r %>" " =$/;"	v
gb	settings/editing.vim	/^nnoremap gb '[V']$/;"	m
jj	settings/editing.vim	/^imap jj <Esc>$/;"	m
jk	settings/editing.vim	/^imap jk <Esc>$/;"	m
kk	settings/editing.vim	/^imap kk <Esc>$/;"	m
mapleader	settings/editing.vim	/^let mapleader = ','$/;"	v
maplocalleader	settings/editing.vim	/^let maplocalleader = ','$/;"	v
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#fnameescape	autoload/pathogen.vim	/^function! pathogen#fnameescape(string) " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
vimclojure#HighlightBuiltins	settings/plugins.vim	/^let vimclojure#HighlightBuiltins=1$/;"	v
vimclojure#ParenRainbow	settings/plugins.vim	/^let vimclojure#ParenRainbow=1$/;"	v
vimclojure#SplitPos	settings/plugins.vim	/^let vimclojure#SplitPos="bottom"$/;"	v
vimclojure#SplitSize	settings/plugins.vim	/^let vimclojure#SplitSize=10$/;"	v
vimclojure#WantNailgun	settings/plugins.vim	/^let vimclojure#WantNailgun=1$/;"	v
